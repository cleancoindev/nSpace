%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%							CSVToImage.NSPC
%
%	Load an image block from a stream in CSV format into a 
%	matrix image
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@

	% Context
	$	Stream				Misc.Dist {}		% Incoming stream

	% Actions
	$	Initialize			Misc.Dist {}		% Initalize graph
	$	Load					Misc.Dist {}		% Perform load

	% Notifications
	$	OnLoad				Misc.Dist {}		% Resulting image

	% DEBUG
	$	Debug Misc.Debug {}
%		!	OnLoad/OnFire							Debug/Fire

	%%%%%%%%
	% Setup
	%%%%%%%%

	% MISCN: Create a dictionary to contain the image
	$	CreateImageDct Misc.Create { Id Adt.Dictionary }
		!	Load/OnFire								CreateImageDct/Fire

	% MISCN: Create a list that will receive the values from a line
	$	CreateLst Misc.Create { Id Adt.List }
		!	Load/OnFire								CreateLst/Fire

	% ADTN: Clear line list
	$	ClearLst Adt.Remove {}
		!	CreateLst/OnFire						ClearLst/Container

	% ADTN: Write values to the list
	$	WriteLst Adt.Write {}
		!	CreateLst/OnFire						WriteLst/List

	%%%%%%%
	% Load
	%%%%%%%

	% IMAGEN: Create container image, keep on CPU
	$	Create Image.Create { Format "F32x2" Width 0:int Height 0:int CPU true:bool }
		!	CreateImageDct/OnFire				Create/Image
		!	Load/OnFire								Create/Fire

	% IMAGEN: Add row of data to the image (-1 = append)
	$	AddRows Image.At { X 0:int Y -1:int }
		!	CreateImageDct/OnFire				AddRows/Image
		!	CreateLst/OnFire						AddRows/Value

	% MISCN: Extract next line up to linefeed
	$	StmToStr Misc.StringStream { Terminator "\r\n" }
		!	Stream/OnFire							StmToStr/Stream
		!	Load/OnFire								StmToStr/From
%		!	StmToStr/OnFire						Debug/Fire

	% MISCN: Remove trailing line terminations and spaces
	$	StrTrail Misc.StringOp { Source " \r\n" }
		!	StmToStr/OnFire						StrTrail/Destination
		!	StmToStr/OnFire						StrTrail/Trailing
%		!	StrTrail/OnFire						Debug/Fire

	% New line of values
	!	StrTrail/OnFire							ClearLst/Clear

	% MISCN: Extract values around comma
	$	TokenIt Misc.TokenIt { Delimiter "," }
		!	StrTrail/OnFire						TokenIt/String
		!	StrTrail/OnFire						TokenIt/Next
%		!	TokenIt/OnNext							Debug/Fire

	% MISCN: Convert to floating point
	$	ToFlt Misc.Type { Type Float }
		!	TokenIt/OnNext							ToFlt/Convert

	% Write to list
	!	ToFlt/OnFire								WriteLst/Fire

	% Next value
	!	TokenIt/OnNext								TokenIt/Next

	% End of string, add row to data block
	!	TokenIt/OnEnd								AddRows/Store

	% Next row
	!	StmToStr/OnFire							StmToStr/From

	% IMAGEN: Download image data locally
	$	Prepare Image.Prepare {}
		!	CreateImageDct/OnFire				Prepare/Image

	% End
	!	Load/OnFire									Prepare/Download
	!	Prepare/OnDownload						OnLoad/Fire


