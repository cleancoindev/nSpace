%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%										SYNC_VALUE_QA.NSPC
%
%				An asynchronous version of a synchronous value queue.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@

	% Context
	$	Maximum			Misc.Dist {}			% Maximum queue size (0 = no limit)

	% Actions
	$	Value					Misc.Dist {}		% Add a value to the queue
	$	Retry					Misc.Dist {}		% Re-emit latest value
	$	Next					Misc.Dist {}		% Return the next value
	$	Uninitialize		Misc.Dist {}		% Uninitialize
	$	Reset					Misc.Dist {}		% Reset/clear contents

	% Notifications
	$	OnValue			Misc.Dist {}			% A value is available
	$	OnEmpty			Misc.Dist {}			% Value queue empty
	$	OnFull			Misc.Dist {}			% Value queue full (if max)

	% Subgraph: Synchronous value queue
	#	Q												Lib/Sync_Value_Q/ {}

	% DEBUG
%	$	Debug Misc.Debug {}
%		!	OnValue/Fire							Debug/Fire

	%%%%%%%%%
	% Values
	%%%%%%%%%

	%% Turn the synchronous queue into an asynchronous queue by emitting
	%% values on its own thread.

	% MISCN: Asynchronous emission for values
	$	AsyncEmit Misc.AsyncEmit {}

	% Emit values from queue asynchronously
	!	Q/OnValue/OnFire							AsyncEmit/Fire
	!	AsyncEmit/OnFire							OnValue/Fire

	% Sync queue signals
	!	Maximum/OnFire								Q/Maximum/Fire
	!	Reset/OnFire								Q/Reset/Fire
	!	Value/OnFire								Q/Value/Fire
	!	Next/OnFire									Q/Next/Fire
	!	Retry/OnFire								Q/Retry/Fire
	!	Q/OnEmpty/OnFire							OnEmpty/Fire
	!	Q/OnFull/OnFire							OnFull/Fire

