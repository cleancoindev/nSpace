%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%								AUTO.NSPC
%
%					Debug 'auto start' graph instance
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@

	% Actions
	$	Initialize			Misc.Dist {}		% Initialize
	$	Uninitialize		Misc.Dist {}		% Uninitialize

	% DEBUG
	$	Debug Misc.Debug {}
		!	Initialize/OnFire						Debug/Fire
		!	Uninitialize/OnFire					Debug/Fire

	% NSPC: Local information
	$	This Nspc.This {}
%		!	Initialize/OnFire						This/Fire

	%%%%%%%%
	% Setup
	%%%%%%%%

	% MISCN: Create file stream source
	$	CreateFileSrc Misc.Create { Id Io.StmSrcFile }
		!	Initialize/OnFire						CreateFileSrc/Fire

	%%%%%%%%%%%%%%
	% USB Raw I/O
	%%%%%%%%%%%%%%

	% Subgraph: USB Raw I/O
%	#	Raw											Lib/Comm/Usb/Raw/ {}
%		!	Raw/State/OnStatus/OnFire			Debug/Fire
%		!	Raw/State/OnRead/OnFire				Debug/Fire

	% MISCN: Device under test
%	$	ValueClassId Misc.Dist { Value "{58D07210-27C1-11DD-BD0B-0800200c9a66}" }
%		!	Initialize/OnFire						ValueClassId/Fire
%		!	ValueClassId/OnFire					Raw/State/ClassId/Fire
%	$	ValueVendorId Misc.Dist { Value 0x03eb:int }
%		!	Initialize/OnFire						ValueVendorId/Fire
%		!	ValueVendorId/OnFire					Raw/State/VendorId/Fire
%	$	ValueProductId Misc.Dist { Value 0xf000:int }
%		!	Initialize/OnFire						ValueProductId/Fire
%		!	ValueProductId/OnFire				Raw/State/ProductId/Fire

	% MISCN: Start test
%	$	ValueStart Misc.Dist { Value Start }
%		!	Initialize/OnFire						ValueStart/Fire
%		!	ValueStart/OnFire						Raw/State/Run/Fire

	% MISCN: Write test string
%	$	ValueWr Misc.Dist { Value "00" }
%		!	Initialize/OnFire						ValueWr/Fire
%		!	ValueWr/OnFire							Raw/State/Write/Fire

	% MISCN: Shutdown on read
%	$	ValueStop Misc.Dist { Value Stop }
%		!	Raw/State/OnRead/OnFire				ValueStop/Fire
%		!	ValueStop/OnFire						Debug/Fire
%		!	ValueStop/OnFire						Debug/Fire
%		!	ValueStop/OnFire						Raw/State/Run/Fire

	%%%%%%%%%%%%%%
	% Enumeration
	%%%%%%%%%%%%%%

	%% USB

	% MISCN: Create file stream source
%	$	CreateFileSrc Misc.Create { Id Io.StmSrcFile }
%		!	Initialize/OnFire						CreateFileSrc/Fire

	% ION: Enumerate devices (USB Device class)
%	$	EnumDev Io.EnumDevices { Class "{A5DCBF10-6530-11D2-901F-00C04FB951ED}" }
%		!	Initialize/OnFire						EnumDev/First
%		!	EnumDev/OnNext							Debug/Fire
%		!	EnumDev/OnName							Debug/Fire

	% ION: Access an asynchronous stream for the device path
%	$	DevStmSrc Io.StreamSource { Options { ReadOnly true:bool Async true:bool } }
%		!	CreateFileSrc/OnFire					DevStmSrc/Source
%		!	EnumDev/OnNext							DevStmSrc/Location
%		!	EnumDev/OnNext							DevStmSrc/Open

	% USBN: Retrieve information about the device
%	$	InfoDev Usb.Device {}
%		!	DevStmSrc/OnOpen						InfoDev/Stream
%		!	DevStmSrc/OnOpen						InfoDev/Open
%		!	InfoDev/OnDevice						Debug/Fire

	% MISCN: Ensure previous device is closed
%	$	CloseDev Io.Resource {}
%		!	DevStmSrc/OnOpen						CloseDev/Resource

	% Clean up
%	!	DevStmSrc/OnOpen							InfoDev/Close
%	!	DevStmSrc/OnOpen							CloseDev/Close

	%% SP devices

	% SPDN: Enumerate devices
	$	Enum Abbott.Spd.Enum {}
		!	Initialize/OnFire						Enum/First
		!	Enum/OnNext								Debug/Fire
		!	Enum/OnEnd								Debug/Fire

	% MISCN: Create enumeration context for the unit
	$	CreateEnumDct Misc.Create { Id Adt.Dictionary }
		!	Enum/OnNext								CreateEnumDct/Fire

	% ADTN: Store the definition needed for the instance
	$	StoreEnumDef Adt.Store { Key Definition Value "Abbott/Driver/Oct/Spd/Inst/" }
		!	CreateEnumDct/OnFire					StoreEnumDef/Dictionary
		!	CreateEnumDct/OnFire					StoreEnumDef/Fire

	% ADTN: Device type
	$	StoreEnumType Adt.Store { Key Type Value Oct }
		!	CreateEnumDct/OnFire					StoreEnumType/Dictionary
		!	CreateEnumDct/OnFire					StoreEnumType/Fire

	% MISCN: Create a state context for the unit
	$	CreateStateDct Misc.Create { Id Adt.Dictionary }
		!	Enum/OnNext								CreateStateDct/Fire

	% ADTN: Store state context in enumeration
	$	StoreStateDct Adt.Store { Key State }
		!	CreateEnumDct/OnFire					StoreStateDct/Dictionary
		!	CreateStateDct/OnFire				StoreStateDct/Fire

	% ADTN: Load the relevant parameters from the information
	$	LoadEnumIdx Adt.Load { Key Index }
		!	Enum/OnNext								LoadEnumIdx/Dictionary
		!	Enum/OnNext								LoadEnumIdx/Fire

	% ADTN: Store value in enumeration dictionary
	$	StoreEnum Adt.Store { Key "State/Index" }
		!	CreateStateDct/OnFire				StoreEnum/Dictionary
		!	LoadEnumIdx/OnFire					StoreEnum/Fire
		!	StoreEnum/OnFire						Debug/Fire

	% This is a test

	% Next device
	!	Enum/OnNext									Enum/Next
%	!	EnumDev/OnNext								EnumDev/Next
